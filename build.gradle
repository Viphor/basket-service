plugins {
    id 'org.springframework.boot' version '2.2.0.M6'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.22.1'
}

ext {
    versions = ext {
        graphql = ext {
            java = '11.0'
            webmvc = '1.0'
        }
        guava = '26.0-jre'
        mariadb = '1.5.7'
        apacheCommonsMath = '3.6.1'
    }
}

group = 'net.klostergaard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.mariadb.jdbc:mariadb-java-client:${versions.mariadb}"
    implementation "com.google.guava:guava:${versions.guava}"
    implementation "org.apache.commons:commons-math3:${versions.apacheCommonsMath}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    name "${project.group}/${bootJar.archiveBaseName.get()}"
    copySpec.from(file("wait-for-it.sh")).into("dependency")
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}
